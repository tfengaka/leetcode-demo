/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ManageRouteImport } from './routes/manage/route'
import { Route as AuthRouteImport } from './routes/_auth/route'
import { Route as IndexImport } from './routes/index'
import { Route as AuthSignUpImport } from './routes/_auth/sign-up'
import { Route as AuthSignInImport } from './routes/_auth/sign-in'
import { Route as ManageUsersIndexImport } from './routes/manage/users/index'
import { Route as ManageSubmissionsIndexImport } from './routes/manage/submissions/index'
import { Route as ManageProblemsIndexImport } from './routes/manage/problems/index'
import { Route as ManageDashboardIndexImport } from './routes/manage/dashboard/index'

// Create/Update Routes

const ManageRouteRoute = ManageRouteImport.update({
  id: '/manage',
  path: '/manage',
  getParentRoute: () => rootRoute,
} as any)

const AuthRouteRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignUpRoute = AuthSignUpImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthSignInRoute = AuthSignInImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => AuthRouteRoute,
} as any)

const ManageUsersIndexRoute = ManageUsersIndexImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => ManageRouteRoute,
} as any)

const ManageSubmissionsIndexRoute = ManageSubmissionsIndexImport.update({
  id: '/submissions/',
  path: '/submissions/',
  getParentRoute: () => ManageRouteRoute,
} as any)

const ManageProblemsIndexRoute = ManageProblemsIndexImport.update({
  id: '/problems/',
  path: '/problems/',
  getParentRoute: () => ManageRouteRoute,
} as any)

const ManageDashboardIndexRoute = ManageDashboardIndexImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => ManageRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/manage': {
      id: '/manage'
      path: '/manage'
      fullPath: '/manage'
      preLoaderRoute: typeof ManageRouteImport
      parentRoute: typeof rootRoute
    }
    '/_auth/sign-in': {
      id: '/_auth/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof AuthSignInImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/sign-up': {
      id: '/_auth/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof AuthSignUpImport
      parentRoute: typeof AuthRouteImport
    }
    '/manage/dashboard/': {
      id: '/manage/dashboard/'
      path: '/dashboard'
      fullPath: '/manage/dashboard'
      preLoaderRoute: typeof ManageDashboardIndexImport
      parentRoute: typeof ManageRouteImport
    }
    '/manage/problems/': {
      id: '/manage/problems/'
      path: '/problems'
      fullPath: '/manage/problems'
      preLoaderRoute: typeof ManageProblemsIndexImport
      parentRoute: typeof ManageRouteImport
    }
    '/manage/submissions/': {
      id: '/manage/submissions/'
      path: '/submissions'
      fullPath: '/manage/submissions'
      preLoaderRoute: typeof ManageSubmissionsIndexImport
      parentRoute: typeof ManageRouteImport
    }
    '/manage/users/': {
      id: '/manage/users/'
      path: '/users'
      fullPath: '/manage/users'
      preLoaderRoute: typeof ManageUsersIndexImport
      parentRoute: typeof ManageRouteImport
    }
  }
}

// Create and export the route tree

interface AuthRouteRouteChildren {
  AuthSignInRoute: typeof AuthSignInRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthSignInRoute: AuthSignInRoute,
  AuthSignUpRoute: AuthSignUpRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface ManageRouteRouteChildren {
  ManageDashboardIndexRoute: typeof ManageDashboardIndexRoute
  ManageProblemsIndexRoute: typeof ManageProblemsIndexRoute
  ManageSubmissionsIndexRoute: typeof ManageSubmissionsIndexRoute
  ManageUsersIndexRoute: typeof ManageUsersIndexRoute
}

const ManageRouteRouteChildren: ManageRouteRouteChildren = {
  ManageDashboardIndexRoute: ManageDashboardIndexRoute,
  ManageProblemsIndexRoute: ManageProblemsIndexRoute,
  ManageSubmissionsIndexRoute: ManageSubmissionsIndexRoute,
  ManageUsersIndexRoute: ManageUsersIndexRoute,
}

const ManageRouteRouteWithChildren = ManageRouteRoute._addFileChildren(
  ManageRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthRouteRouteWithChildren
  '/manage': typeof ManageRouteRouteWithChildren
  '/sign-in': typeof AuthSignInRoute
  '/sign-up': typeof AuthSignUpRoute
  '/manage/dashboard': typeof ManageDashboardIndexRoute
  '/manage/problems': typeof ManageProblemsIndexRoute
  '/manage/submissions': typeof ManageSubmissionsIndexRoute
  '/manage/users': typeof ManageUsersIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthRouteRouteWithChildren
  '/manage': typeof ManageRouteRouteWithChildren
  '/sign-in': typeof AuthSignInRoute
  '/sign-up': typeof AuthSignUpRoute
  '/manage/dashboard': typeof ManageDashboardIndexRoute
  '/manage/problems': typeof ManageProblemsIndexRoute
  '/manage/submissions': typeof ManageSubmissionsIndexRoute
  '/manage/users': typeof ManageUsersIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteRouteWithChildren
  '/manage': typeof ManageRouteRouteWithChildren
  '/_auth/sign-in': typeof AuthSignInRoute
  '/_auth/sign-up': typeof AuthSignUpRoute
  '/manage/dashboard/': typeof ManageDashboardIndexRoute
  '/manage/problems/': typeof ManageProblemsIndexRoute
  '/manage/submissions/': typeof ManageSubmissionsIndexRoute
  '/manage/users/': typeof ManageUsersIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/manage'
    | '/sign-in'
    | '/sign-up'
    | '/manage/dashboard'
    | '/manage/problems'
    | '/manage/submissions'
    | '/manage/users'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/manage'
    | '/sign-in'
    | '/sign-up'
    | '/manage/dashboard'
    | '/manage/problems'
    | '/manage/submissions'
    | '/manage/users'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/manage'
    | '/_auth/sign-in'
    | '/_auth/sign-up'
    | '/manage/dashboard/'
    | '/manage/problems/'
    | '/manage/submissions/'
    | '/manage/users/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  ManageRouteRoute: typeof ManageRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  ManageRouteRoute: ManageRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/manage"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth/route.tsx",
      "children": [
        "/_auth/sign-in",
        "/_auth/sign-up"
      ]
    },
    "/manage": {
      "filePath": "manage/route.tsx",
      "children": [
        "/manage/dashboard/",
        "/manage/problems/",
        "/manage/submissions/",
        "/manage/users/"
      ]
    },
    "/_auth/sign-in": {
      "filePath": "_auth/sign-in.tsx",
      "parent": "/_auth"
    },
    "/_auth/sign-up": {
      "filePath": "_auth/sign-up.tsx",
      "parent": "/_auth"
    },
    "/manage/dashboard/": {
      "filePath": "manage/dashboard/index.tsx",
      "parent": "/manage"
    },
    "/manage/problems/": {
      "filePath": "manage/problems/index.tsx",
      "parent": "/manage"
    },
    "/manage/submissions/": {
      "filePath": "manage/submissions/index.tsx",
      "parent": "/manage"
    },
    "/manage/users/": {
      "filePath": "manage/users/index.tsx",
      "parent": "/manage"
    }
  }
}
ROUTE_MANIFEST_END */
