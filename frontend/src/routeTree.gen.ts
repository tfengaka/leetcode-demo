/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ManageRouteImport } from './routes/manage/route'
import { Route as AuthRouteImport } from './routes/_auth/route'
import { Route as IndexImport } from './routes/index'
import { Route as ManageIndexImport } from './routes/manage/index'
import { Route as AuthSignUpImport } from './routes/_auth/sign-up'
import { Route as AuthSignInImport } from './routes/_auth/sign-in'
import { Route as errors503Import } from './routes/(errors)/503'
import { Route as errors500Import } from './routes/(errors)/500'
import { Route as errors404Import } from './routes/(errors)/404'
import { Route as errors403Import } from './routes/(errors)/403'
import { Route as errors401Import } from './routes/(errors)/401'
import { Route as ManageUsersIndexImport } from './routes/manage/users/index'
import { Route as ManageSubmissionsIndexImport } from './routes/manage/submissions/index'
import { Route as ManageProblemsIndexImport } from './routes/manage/problems/index'
import { Route as ManageDashboardIndexImport } from './routes/manage/dashboard/index'
import { Route as ManageProblemsCreateImport } from './routes/manage/problems/create'
import { Route as ManageProblemsIdImport } from './routes/manage/problems/$id'

// Create/Update Routes

const ManageRouteRoute = ManageRouteImport.update({
  id: '/manage',
  path: '/manage',
  getParentRoute: () => rootRoute,
} as any)

const AuthRouteRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ManageIndexRoute = ManageIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ManageRouteRoute,
} as any)

const AuthSignUpRoute = AuthSignUpImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthSignInRoute = AuthSignInImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => AuthRouteRoute,
} as any)

const errors503Route = errors503Import.update({
  id: '/(errors)/503',
  path: '/503',
  getParentRoute: () => rootRoute,
} as any)

const errors500Route = errors500Import.update({
  id: '/(errors)/500',
  path: '/500',
  getParentRoute: () => rootRoute,
} as any)

const errors404Route = errors404Import.update({
  id: '/(errors)/404',
  path: '/404',
  getParentRoute: () => rootRoute,
} as any)

const errors403Route = errors403Import.update({
  id: '/(errors)/403',
  path: '/403',
  getParentRoute: () => rootRoute,
} as any)

const errors401Route = errors401Import.update({
  id: '/(errors)/401',
  path: '/401',
  getParentRoute: () => rootRoute,
} as any)

const ManageUsersIndexRoute = ManageUsersIndexImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => ManageRouteRoute,
} as any)

const ManageSubmissionsIndexRoute = ManageSubmissionsIndexImport.update({
  id: '/submissions/',
  path: '/submissions/',
  getParentRoute: () => ManageRouteRoute,
} as any)

const ManageProblemsIndexRoute = ManageProblemsIndexImport.update({
  id: '/problems/',
  path: '/problems/',
  getParentRoute: () => ManageRouteRoute,
} as any)

const ManageDashboardIndexRoute = ManageDashboardIndexImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => ManageRouteRoute,
} as any)

const ManageProblemsCreateRoute = ManageProblemsCreateImport.update({
  id: '/problems/create',
  path: '/problems/create',
  getParentRoute: () => ManageRouteRoute,
} as any)

const ManageProblemsIdRoute = ManageProblemsIdImport.update({
  id: '/problems/$id',
  path: '/problems/$id',
  getParentRoute: () => ManageRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/manage': {
      id: '/manage'
      path: '/manage'
      fullPath: '/manage'
      preLoaderRoute: typeof ManageRouteImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401Import
      parentRoute: typeof rootRoute
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403Import
      parentRoute: typeof rootRoute
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404Import
      parentRoute: typeof rootRoute
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500Import
      parentRoute: typeof rootRoute
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503Import
      parentRoute: typeof rootRoute
    }
    '/_auth/sign-in': {
      id: '/_auth/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof AuthSignInImport
      parentRoute: typeof AuthRouteImport
    }
    '/_auth/sign-up': {
      id: '/_auth/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof AuthSignUpImport
      parentRoute: typeof AuthRouteImport
    }
    '/manage/': {
      id: '/manage/'
      path: '/'
      fullPath: '/manage/'
      preLoaderRoute: typeof ManageIndexImport
      parentRoute: typeof ManageRouteImport
    }
    '/manage/problems/$id': {
      id: '/manage/problems/$id'
      path: '/problems/$id'
      fullPath: '/manage/problems/$id'
      preLoaderRoute: typeof ManageProblemsIdImport
      parentRoute: typeof ManageRouteImport
    }
    '/manage/problems/create': {
      id: '/manage/problems/create'
      path: '/problems/create'
      fullPath: '/manage/problems/create'
      preLoaderRoute: typeof ManageProblemsCreateImport
      parentRoute: typeof ManageRouteImport
    }
    '/manage/dashboard/': {
      id: '/manage/dashboard/'
      path: '/dashboard'
      fullPath: '/manage/dashboard'
      preLoaderRoute: typeof ManageDashboardIndexImport
      parentRoute: typeof ManageRouteImport
    }
    '/manage/problems/': {
      id: '/manage/problems/'
      path: '/problems'
      fullPath: '/manage/problems'
      preLoaderRoute: typeof ManageProblemsIndexImport
      parentRoute: typeof ManageRouteImport
    }
    '/manage/submissions/': {
      id: '/manage/submissions/'
      path: '/submissions'
      fullPath: '/manage/submissions'
      preLoaderRoute: typeof ManageSubmissionsIndexImport
      parentRoute: typeof ManageRouteImport
    }
    '/manage/users/': {
      id: '/manage/users/'
      path: '/users'
      fullPath: '/manage/users'
      preLoaderRoute: typeof ManageUsersIndexImport
      parentRoute: typeof ManageRouteImport
    }
  }
}

// Create and export the route tree

interface AuthRouteRouteChildren {
  AuthSignInRoute: typeof AuthSignInRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthSignInRoute: AuthSignInRoute,
  AuthSignUpRoute: AuthSignUpRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface ManageRouteRouteChildren {
  ManageIndexRoute: typeof ManageIndexRoute
  ManageProblemsIdRoute: typeof ManageProblemsIdRoute
  ManageProblemsCreateRoute: typeof ManageProblemsCreateRoute
  ManageDashboardIndexRoute: typeof ManageDashboardIndexRoute
  ManageProblemsIndexRoute: typeof ManageProblemsIndexRoute
  ManageSubmissionsIndexRoute: typeof ManageSubmissionsIndexRoute
  ManageUsersIndexRoute: typeof ManageUsersIndexRoute
}

const ManageRouteRouteChildren: ManageRouteRouteChildren = {
  ManageIndexRoute: ManageIndexRoute,
  ManageProblemsIdRoute: ManageProblemsIdRoute,
  ManageProblemsCreateRoute: ManageProblemsCreateRoute,
  ManageDashboardIndexRoute: ManageDashboardIndexRoute,
  ManageProblemsIndexRoute: ManageProblemsIndexRoute,
  ManageSubmissionsIndexRoute: ManageSubmissionsIndexRoute,
  ManageUsersIndexRoute: ManageUsersIndexRoute,
}

const ManageRouteRouteWithChildren = ManageRouteRoute._addFileChildren(
  ManageRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthRouteRouteWithChildren
  '/manage': typeof ManageRouteRouteWithChildren
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/sign-in': typeof AuthSignInRoute
  '/sign-up': typeof AuthSignUpRoute
  '/manage/': typeof ManageIndexRoute
  '/manage/problems/$id': typeof ManageProblemsIdRoute
  '/manage/problems/create': typeof ManageProblemsCreateRoute
  '/manage/dashboard': typeof ManageDashboardIndexRoute
  '/manage/problems': typeof ManageProblemsIndexRoute
  '/manage/submissions': typeof ManageSubmissionsIndexRoute
  '/manage/users': typeof ManageUsersIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthRouteRouteWithChildren
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/sign-in': typeof AuthSignInRoute
  '/sign-up': typeof AuthSignUpRoute
  '/manage': typeof ManageIndexRoute
  '/manage/problems/$id': typeof ManageProblemsIdRoute
  '/manage/problems/create': typeof ManageProblemsCreateRoute
  '/manage/dashboard': typeof ManageDashboardIndexRoute
  '/manage/problems': typeof ManageProblemsIndexRoute
  '/manage/submissions': typeof ManageSubmissionsIndexRoute
  '/manage/users': typeof ManageUsersIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteRouteWithChildren
  '/manage': typeof ManageRouteRouteWithChildren
  '/(errors)/401': typeof errors401Route
  '/(errors)/403': typeof errors403Route
  '/(errors)/404': typeof errors404Route
  '/(errors)/500': typeof errors500Route
  '/(errors)/503': typeof errors503Route
  '/_auth/sign-in': typeof AuthSignInRoute
  '/_auth/sign-up': typeof AuthSignUpRoute
  '/manage/': typeof ManageIndexRoute
  '/manage/problems/$id': typeof ManageProblemsIdRoute
  '/manage/problems/create': typeof ManageProblemsCreateRoute
  '/manage/dashboard/': typeof ManageDashboardIndexRoute
  '/manage/problems/': typeof ManageProblemsIndexRoute
  '/manage/submissions/': typeof ManageSubmissionsIndexRoute
  '/manage/users/': typeof ManageUsersIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/manage'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/sign-in'
    | '/sign-up'
    | '/manage/'
    | '/manage/problems/$id'
    | '/manage/problems/create'
    | '/manage/dashboard'
    | '/manage/problems'
    | '/manage/submissions'
    | '/manage/users'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/sign-in'
    | '/sign-up'
    | '/manage'
    | '/manage/problems/$id'
    | '/manage/problems/create'
    | '/manage/dashboard'
    | '/manage/problems'
    | '/manage/submissions'
    | '/manage/users'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/manage'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/_auth/sign-in'
    | '/_auth/sign-up'
    | '/manage/'
    | '/manage/problems/$id'
    | '/manage/problems/create'
    | '/manage/dashboard/'
    | '/manage/problems/'
    | '/manage/submissions/'
    | '/manage/users/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  ManageRouteRoute: typeof ManageRouteRouteWithChildren
  errors401Route: typeof errors401Route
  errors403Route: typeof errors403Route
  errors404Route: typeof errors404Route
  errors500Route: typeof errors500Route
  errors503Route: typeof errors503Route
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  ManageRouteRoute: ManageRouteRouteWithChildren,
  errors401Route: errors401Route,
  errors403Route: errors403Route,
  errors404Route: errors404Route,
  errors500Route: errors500Route,
  errors503Route: errors503Route,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/manage",
        "/(errors)/401",
        "/(errors)/403",
        "/(errors)/404",
        "/(errors)/500",
        "/(errors)/503"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth/route.tsx",
      "children": [
        "/_auth/sign-in",
        "/_auth/sign-up"
      ]
    },
    "/manage": {
      "filePath": "manage/route.tsx",
      "children": [
        "/manage/",
        "/manage/problems/$id",
        "/manage/problems/create",
        "/manage/dashboard/",
        "/manage/problems/",
        "/manage/submissions/",
        "/manage/users/"
      ]
    },
    "/(errors)/401": {
      "filePath": "(errors)/401.tsx"
    },
    "/(errors)/403": {
      "filePath": "(errors)/403.tsx"
    },
    "/(errors)/404": {
      "filePath": "(errors)/404.tsx"
    },
    "/(errors)/500": {
      "filePath": "(errors)/500.tsx"
    },
    "/(errors)/503": {
      "filePath": "(errors)/503.tsx"
    },
    "/_auth/sign-in": {
      "filePath": "_auth/sign-in.tsx",
      "parent": "/_auth"
    },
    "/_auth/sign-up": {
      "filePath": "_auth/sign-up.tsx",
      "parent": "/_auth"
    },
    "/manage/": {
      "filePath": "manage/index.tsx",
      "parent": "/manage"
    },
    "/manage/problems/$id": {
      "filePath": "manage/problems/$id.tsx",
      "parent": "/manage"
    },
    "/manage/problems/create": {
      "filePath": "manage/problems/create.tsx",
      "parent": "/manage"
    },
    "/manage/dashboard/": {
      "filePath": "manage/dashboard/index.tsx",
      "parent": "/manage"
    },
    "/manage/problems/": {
      "filePath": "manage/problems/index.tsx",
      "parent": "/manage"
    },
    "/manage/submissions/": {
      "filePath": "manage/submissions/index.tsx",
      "parent": "/manage"
    },
    "/manage/users/": {
      "filePath": "manage/users/index.tsx",
      "parent": "/manage"
    }
  }
}
ROUTE_MANIFEST_END */
